// clear fix
@mixin clearfix()
  &:before,
  &:after
    content: ""
    display: table

  &:after
    clear: both

// Responsive utilities

//
// More easily include all the states for responsive-utilities.less.
// [converter] $parent hack
@mixin responsive-visibility($parent)
  #{$parent}
    display: block !important
  table#{$parent}
    display: table !important
  tr#{$parent}
    display: table-row !important
  th#{$parent}, td#{$parent}
    display: table-cell !important


// [converter] $parent hack
@mixin responsive-invisibility($parent)
  #{$parent}
    display: none !important


$grid-columns:              12 !default


@mixin calc-grid-column($index, $class, $type)
  @if ($type == width) and ($index > 0)
    .col-#{$class}-#{$index}
      width: percentage(($index / $grid-columns))

  @if ($type == push) and ($index > 0)
    .col-#{$class}-push-#{$index}
      left: percentage(($index / $grid-columns))

  @if ($type == push) and ($index == 0)
    .col-#{$class}-push-0
      left: auto

  @if ($type == pull) and ($index > 0)
    .col-#{$class}-pull-#{$index}
      right: percentage(($index / $grid-columns))

  @if ($type == pull) and ($index == 0)
    .col-#{$class}-pull-0
      right: auto

  @if ($type == offset)
    .col-#{$class}-offset-#{$index}
      margin-left: percentage(($index / $grid-columns))


// [converter] This is defined recursively in LESS, but Sass supports real loops
@mixin float-grid-columns($class, $i: 1, $list: ".col-#{$class}-#{$i}")
  @for $i from (1 + 1) through $grid-columns
    $list: "#{$list}, .col-#{$class}-#{$i}"

  #{$list}
    float: left


// [converter] This is defined recursively in LESS, but Sass supports real loops
@mixin loop-grid-columns($columns, $class, $type)
  @for $i from 0 through $columns
    @include calc-grid-column($i, $class, $type)


// Create grid for specific class
@mixin make-grid($class)
  @include float-grid-columns($class)
  @include loop-grid-columns($grid-columns, $class, width)
  @include loop-grid-columns($grid-columns, $class, pull)
  @include loop-grid-columns($grid-columns, $class, push)
  @include loop-grid-columns($grid-columns, $class, offset)



